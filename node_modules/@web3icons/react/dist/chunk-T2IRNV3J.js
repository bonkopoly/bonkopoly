import { BaseIcon } from './chunk-MLKFOR3D.js';
import { forwardRef } from 'react';
import { jsx, jsxs, Fragment } from 'react/jsx-runtime';

var TokenKTC = forwardRef(({ variant = "branded", fallback, ...props }, ref) => /* @__PURE__ */ jsx(BaseIcon, { fallback, ...props, ref, children: variant === "branded" && /* @__PURE__ */ jsxs(Fragment, { children: [
  /* @__PURE__ */ jsx("path", { fill: "url(#KTC__a)", d: "M3.321 3v2.571h2.572V3zm0 18V6.857h2.572v7.38L17.078 3h3.6zm8.036-5.722A776 776 0 0 1 17.078 21h3.6l-7.43-7.714z" }),
  /* @__PURE__ */ jsx("defs", { children: /* @__PURE__ */ jsxs("linearGradient", { id: "KTC__a", x1: "12", x2: "12", y1: "3", y2: "21", gradientUnits: "userSpaceOnUse", children: [
    /* @__PURE__ */ jsx("stop", { stopColor: "#53F3FF" }),
    /* @__PURE__ */ jsx("stop", { offset: "1", stopColor: "#38CDEE" })
  ] }) })
] }) || variant === "mono" && /* @__PURE__ */ jsx(Fragment, { children: /* @__PURE__ */ jsx("path", { fill: "currentColor", d: "M3.321 3v2.571h2.572V3zm0 18V6.857h2.572v7.38L17.078 3h3.6zm8.036-5.722A753 753 0 0 1 17.078 21h3.6l-7.431-7.714z" }) }) || variant === "background" && /* @__PURE__ */ jsxs(Fragment, { children: [
  /* @__PURE__ */ jsxs("g", { clipPath: "url(#KTC__a)", children: [
    /* @__PURE__ */ jsx("path", { fill: "url(#KTC__b)", d: "M24 0H0v24h24z" }),
    /* @__PURE__ */ jsx("path", { fill: "#fff", d: "M4.286 4v2.286H6.57V4zm0 16V7.429H6.57v6.56L16.514 4h3.2zm7.143-5.086A670 670 0 0 1 16.514 20h3.2l-6.605-6.857z" })
  ] }),
  /* @__PURE__ */ jsxs("defs", { children: [
    /* @__PURE__ */ jsxs("linearGradient", { id: "KTC__b", x1: "12", x2: "12", y1: "4", y2: "20", gradientUnits: "userSpaceOnUse", children: [
      /* @__PURE__ */ jsx("stop", { stopColor: "#53F3FF" }),
      /* @__PURE__ */ jsx("stop", { offset: "1", stopColor: "#38CDEE" })
    ] }),
    /* @__PURE__ */ jsx("clipPath", { id: "KTC__a", children: /* @__PURE__ */ jsx("path", { fill: "#fff", d: "M0 0h24v24H0z" }) })
  ] })
] }) }));
TokenKTC.displayName = "TokenKTC";
var TokenKTC_default = TokenKTC;

export { TokenKTC_default };
