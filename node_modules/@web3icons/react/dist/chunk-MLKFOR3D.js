import { forwardRef } from 'react';
import { jsx, Fragment } from 'react/jsx-runtime';

var __defProp = Object.defineProperty;
var __glob = (map) => (path) => {
  var fn = map[path];
  if (fn)
    return fn();
  throw new Error("Module not found in bundle: " + path);
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var BaseIcon = forwardRef(({ size = 24, children, fallback, ...props }, ref) => {
  if (!children && fallback) {
    if (typeof fallback === "string") {
      return /* @__PURE__ */ jsx(
        "img",
        {
          ref,
          src: fallback,
          width: size,
          height: size
        }
      );
    }
    return /* @__PURE__ */ jsx(Fragment, { children: fallback });
  }
  return /* @__PURE__ */ jsx(
    "svg",
    {
      ref,
      width: size,
      height: size,
      viewBox: "0 0 24 24",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      ...props,
      children
    }
  );
});
BaseIcon.displayName = "BaseIcon";

export { BaseIcon, __export, __glob };
