import * as react from 'react';
import { I as IconComponentProps } from './types-C1VLGFFn.js';
import '@web3icons/common';

/**
 * @component @name TokenIcon
 *
 * @description A React component for rendering token icons dynamically based on the provided symbol, address, and network.
 *
 * @param {TokenIconProps} props
 * @param {SVGSVGElement} ref
 *
 * @returns {JSX.Element} JSX Element for the TokenIcon component.
 */
declare const TokenIcon: react.ForwardRefExoticComponent<(Omit<IconComponentProps & {
    symbol: string;
    address?: undefined;
    network?: undefined;
    id?: undefined;
    name?: undefined;
}, "ref"> | Omit<IconComponentProps & {
    symbol?: undefined;
    address: string;
    network: string;
    id?: undefined;
    name?: undefined;
}, "ref"> | Omit<IconComponentProps & {
    symbol?: undefined;
    address?: undefined;
    network?: undefined;
    id: string;
    name?: undefined;
}, "ref"> | Omit<IconComponentProps & {
    symbol?: undefined;
    address?: undefined;
    network?: undefined;
    id?: undefined;
    name: string;
}, "ref">) & react.RefAttributes<SVGSVGElement>>;

/**
 * @component @name NetworkIcon
 *
 * @description A React component for rendering network icons dynamically based on the provided network or chain ID.
 *
 * @param {NetworkIconProps} props
 * @param {SVGSVGElement} ref
 *
 * @returns {JSX.Element} JSX Element for the NetworkIcon component.
 */
declare const NetworkIcon: react.ForwardRefExoticComponent<(Omit<IconComponentProps & {
    name: string;
    chainId?: undefined;
    caip2id?: undefined;
    id?: undefined;
}, "ref"> | Omit<IconComponentProps & {
    name?: undefined;
    chainId: string | number;
    caip2id?: undefined;
    id?: undefined;
}, "ref"> | Omit<IconComponentProps & {
    name?: undefined;
    chainId?: undefined;
    caip2id: string;
    id?: undefined;
}, "ref"> | Omit<IconComponentProps & {
    name?: undefined;
    chainId?: undefined;
    caip2id?: undefined;
    id: string;
}, "ref">) & react.RefAttributes<SVGSVGElement>>;

/**
 * @component @name WalletIcon
 *
 * @description A React component for rendering wallet icons dynamically based on the provided wallet ID or name.
 *
 * @param {WalletIconProps} props
 * @param {SVGSVGElement} ref
 *
 * @returns {JSX.Element} JSX Element for the WalletIcon component.
 */
declare const WalletIcon: react.ForwardRefExoticComponent<(Omit<IconComponentProps & {
    name: string;
    id?: undefined;
}, "ref"> | Omit<IconComponentProps & {
    name?: undefined;
    id: string;
}, "ref">) & react.RefAttributes<SVGSVGElement>>;

/**
 * @component @name ExchangeIcon
 *
 * @description A React component for rendering exchange icons dynamically based on the provided exchange ID or name.
 *
 * @param {ExchangeIconProps} props
 * @param {SVGSVGElement} ref
 *
 * @returns {JSX.Element} JSX Element for the ExchangeIcon component.
 */
declare const ExchangeIcon: react.ForwardRefExoticComponent<(Omit<IconComponentProps & {
    name: string;
    id?: undefined;
}, "ref"> | Omit<IconComponentProps & {
    name?: undefined;
    id: string;
}, "ref">) & react.RefAttributes<SVGSVGElement>>;

export { ExchangeIcon, NetworkIcon, TokenIcon, WalletIcon };
